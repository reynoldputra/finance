// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/client"
  binaryTargets = ["native", "darwin", "darwin-arm64"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Customer {
  id           String    @id @default(cuid())
  namaCustomer String    @map("nama_customer")
  invoices     Invoice[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Invoice {
  id                   String                 @id @default(cuid())
  total                Int
  namaSales            String                 @map("nama_sales")
  tanggalTransaksi     DateTime               @map("tanggal_transaksi")
  customerId           String
  distribusiPembayaran DistribusiPembayaran[]

  customer  Customer @relation(fields: [customerId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

// model Pembayaran {
//   id                String              @id @default(cuid())
//   namaKolektor      String              @map("nama_kolektor")
//   tanggal           DateTime            @map("tanggal_tagihan")
//   PembayaranInvoice PembayaranInvoice[]

//   createdAt DateTime @default(now()) @map("created_at")
//   updatedAt DateTime @updatedAt @map("updated_at")
// }

// model PembayaranInvoice {
//   id           String @id @default(cuid())
//   invoiceId    String
//   pembayaranId String

//   invoice              Invoice                @relation(fields: [invoiceId], references: [id])
//   pembayaran           Pembayaran             @relation(fields: [pembayaranId], references: [id])
//   distribusiPembayaran DistribusiPembayaran[]

//   @@map("pembayaran_invoice")
// }

model DistribusiPembayaran {
  id             String  @id @default(cuid())
  jumlah         String
  status         String
  keterangan     String?
  tanggalTagihan String  @map("tanggal_tagihan")
  namaKolektor   String  @map("nama_kolektor")
  caraBayarId    String
  invoiceId      String

  invoice   Invoice   @relation(fields: [invoiceId], references: [id])
  CaraBayar CaraBayar @relation(fields: [caraBayarId], references: [id])

  @@map("distribusi_pembayaran")
}

model CaraBayar {
  id                   String                 @id @default(cuid())
  total                Int
  tandaTerima          Boolean                @map("tanda_terima")
  distribusiPembayaran DistribusiPembayaran[]
  metodePembayaranId   Int?

  Transfer  Transfer?
  Giro      Giro?
  createdAt DateTime          @default(now()) @map("created_at")
  updatedAt DateTime          @updatedAt @map("updated_at")
  metode    MetodePembayaran? @relation(fields: [metodePembayaranId], references: [id])

  @@map("cata_bayar")
}

model MetodePembayaran {
  id        Int         @id @default(autoincrement())
  jenis     String
  CaraBayar CaraBayar[]

  @@map("metode_pembayaran")
}

model Giro {
  id          String    @id @default(cuid())
  bank        String
  nomor       Int
  jatuhTempo  DateTime  @map("jatuh_tempo")
  caraBayarId String    @unique
  CaraBayar   CaraBayar @relation(fields: [caraBayarId], references: [id])
}

model Transfer {
  id          String    @id @default(cuid())
  tanggal     DateTime
  caraBayarId String    @unique
  CaraBayar   CaraBayar @relation(fields: [caraBayarId], references: [id])
}
